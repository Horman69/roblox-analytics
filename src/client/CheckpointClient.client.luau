local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
local function debugLog(message: string, ...: any)
    print(string.format("[%s] %s", os.date("%H:%M:%S"), string.format(message, ...)))
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
if not RunService:IsClient() then
    error("‚ö†Ô∏è –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ!")
    return
end

-- –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–∞
local player = Players.LocalPlayer
if not player then
    error("‚ö†Ô∏è [ANALYTICS] –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
local Analytics = {
    lastEvent = nil,
    lastEventTime = 0,
    EVENT_COOLDOWN = 1,
    events = {
        checkpoint = ReplicatedStorage:WaitForChild("CheckpointEvent"),
        session = ReplicatedStorage:WaitForChild("SessionEvent"),
        custom = ReplicatedStorage:WaitForChild("CustomEvent")
    }
}

-- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
function Analytics:sendEvent(eventType: string, data: any)
    local currentTime = os.time()
    
    -- –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞
    if currentTime - self.lastEventTime < self.EVENT_COOLDOWN then
        return false
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    local event = self.events[eventType]
    if not event then
        warn("‚ö†Ô∏è [ANALYTICS] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è:", eventType)
        return false
    end
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
    local success, err = pcall(function()
        event:FireServer(data)
        debugLog("üì§ [ANALYTICS] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ %s: %s", eventType, tostring(data))
    end)
    
    if not success then
        warn("‚ö†Ô∏è [ANALYTICS] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è:", err)
        return false
    end
    
    self.lastEventTime = currentTime
    self.lastEvent = eventType
    return true
end

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
local function startSessionTracking()
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏
    Analytics:sendEvent("session", {
        action = "start",
        timestamp = os.time()
    })
    
    -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—ã—Ö–æ–¥ –∏–≥—Ä–æ–∫–∞
    game:BindToClose(function()
        Analytics:sendEvent("session", {
            action = "end",
            timestamp = os.time()
        })
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
startSessionTracking()
debugLog("‚úÖ [ANALYTICS] –ö–ª–∏–µ–Ω—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

return Analytics